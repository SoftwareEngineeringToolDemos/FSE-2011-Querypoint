\relax 
\citation{LaToza}
\@writefile{toc}{\contentsline {title}{Lecture Notes in Computer Science}{1}}
\@writefile{toc}{\authcount {3}}
\@writefile{toc}{\contentsline {author}{Authors' Instructions}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Introductory example}{3}}
\newlabel{sec:introExample}{{2}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces A Web page containing JavaScript code. Some lines not related to our paper have been elided.}}{4}}
\newlabel{fig:js-code}{{1}{4}}
\newlabel{fig:example1}{{2(a)}{6}}
\newlabel{sub@fig:example1}{{(a)}{6}}
\newlabel{fig:example3}{{2(b)}{6}}
\newlabel{sub@fig:example3}{{(b)}{6}}
\newlabel{fig:example4}{{2(c)}{6}}
\newlabel{sub@fig:example4}{{(c)}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces The stages of locating the defect using \textit  {lastChange} feature.}}{6}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {A screen shot of the Firebug debugger while running the example code from Fig.\nobreakspace {}1\hbox {}. The Script panel is selected; it gives access to all loaded source files and allows breakpoints to be set on lines. In this figure, the execution is paused at line 22 by a regular breakpoint. The Watch panel at the right shows the program state at the paused point. Developer can query \textit {lastChange} on a \texttt {myObject.myProperty} by right-clicking on the value of \texttt {myProperty}. }}}{6}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {The result of \textit {lastChange} query for \texttt {myObject.myProperty}. The left panel, QP, shows the source code at the point of \textit {lastChange}; The right panel, TraceData, shows the collected data at the point.}}}{6}}
\@writefile{lof}{\contentsline {subfigure}{\numberline{(c)}{\ignorespaces {The result of \textit {lastChange} query for \texttt {myCondition.value}. To evaluate an expression (e.g., oldValue) at this point, developer can enter the expression in the watch box and after re-execution the result is available. The opened list on the top of the left panel shows the visited execution points. Clicking on each point in the list shows the corresponding code and data.}}}{6}}
\newlabel{fig:lastChange}{{2}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces The examined points before locating the defect. The arrow represents the logical forward progress of the program. Three actual executions are superimposed on this arrow. All three stop at the reproduction point indicated by the circle 1. After the first execution, the developer asks for lastChange as described in 2\hbox {}, yielding information indicated by circle 2. After the second execution, another lastChange query causes a third execution, yielding information indicated by circle 3.}}{7}}
\newlabel{fig:example-points}{{3}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {3}\textit  {lastChange} Algorithm}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}\textit  {lastChange} on object property}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces The list of property \texttt  {foo} change events and \texttt  {bar} id at the reproduction point which identifies the last change of \texttt  {bar.foo} in the list. Column 3 is also a change of the object we want to study, id 1010, but it is not the last change; Column 5 is also a change of a property \texttt  {foo} but its not for the object we are interested in.}}{8}}
\newlabel{fig:foo-changes1}{{4}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}\textit  {lastChange} on variable}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces A recursive call trace demonstrates the need for scope id. In the absence of scope id, querying \textit  {lastChange} on \texttt  {x} at point C in scope 1 returns point B which is the last change of variable \texttt  {x} but happens in another scope. However, the right answer is point A which is in the same scope as point C.}}{9}}
\newlabel{fig:recursive}{{5}{9}}
\@writefile{toc}{\contentsline {subsubsection}{global and \texttt  {with} scopes}{9}}
\@writefile{toc}{\contentsline {subsubsection}{local, closure and \texttt  {catch} scopes}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces The list of variable \texttt  {foo} change events and the \texttt  {foo}'s scope id at the reproduction point which identifies the last change.}}{10}}
\newlabel{fig:foo-changes2}{{6}{10}}
\citation{Firebug}
\citation{Firefox}
\citation{JSD}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}\textit  {lastChange} on \textit  {lastChange}}{11}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces \textit  {lastChange} queries dependency analysis.}}{11}}
\newlabel{dependency-analysis}{{1}{11}}
\@writefile{toc}{\contentsline {section}{\numberline {4}JavaScript implementation}{11}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces The list of change events stored for locating point B, the \textit  {lastChange} of \texttt  {bar.x} at the reproduction point, and point C, the \textit  {lastChange} of \texttt  {baz.y} at point B.}}{12}}
\newlabel{fig:lastchange-lastchange}{{7}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}\texttt  {objectId()} operation}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}\texttt  {setPropertyChangeHook()} operation}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Examples of three types of JavaScript object creatin statements.}}{14}}
\newlabel{fig:objectCreation}{{8}{14}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}\texttt  {scopeId()} operation}{14}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}\texttt  {setVariableChangeHook()} operation}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Sample JavaScript code demonstrating local and clousure variables.}}{15}}
\newlabel{fig:js-closure}{{9}{15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}Re-Execution, reproduction point and data collection}{15}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Reproducible Non-deterministic Execution}{16}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Pausing at \textit  {lastChange} Result}{16}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces A counter-example for transforming \textit  {lastChange} to a conditional breakpoint.}}{17}}
\newlabel{fig:counter-example}{{10}{17}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}\textit  {lastChange} Result Consistency}{17}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Evaluation}{17}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Discussion}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces \textit  {lastChange} on non-deterministic values.}}{18}}
\newlabel{fig:nondeterministic-values}{{11}{18}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1}Developers need an operation like \textit {lastChange} }{18}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2}Developers can learn to use \texttt {lastChange}}{18}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3}Practical implementations are feasible}{19}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.4}In most cases \texttt {lastChange} will be much faster than current alternatives}{19}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.5}The worst cases are not more common or more painful than alternatives}{19}}
\citation{Boothe}
\citation{Maruyama}
\citation{Maruyama}
\citation{Lewis}
\citation{Hofer}
\@writefile{toc}{\contentsline {section}{\numberline {8}Related Work}{20}}
\newlabel{sec:relatedWork}{{8}{20}}
\citation{Pothier}
\citation{Lienhard}
\citation{Bond}
\citation{Ko}
\citation{Czyz}
\@writefile{toc}{\contentsline {section}{\numberline {9}Conclusion}{21}}
\bibcite{Bond}{1}
\bibcite{Bond2}{2}
\bibcite{Boothe}{3}
\bibcite{Czyz}{4}
\bibcite{Firebug}{5}
\bibcite{Firefox}{6}
\bibcite{Hofer}{7}
\bibcite{Ko}{8}
\bibcite{LaToza}{9}
\bibcite{Lewis}{10}
\bibcite{Lienhard}{11}
\bibcite{Maruyama}{12}
\bibcite{JSD}{13}
\bibcite{Pothier}{14}
